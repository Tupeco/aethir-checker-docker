services:
  checker:
    build: .
    platform: linux/amd64
    restart: unless-stopped
    attach: false
    tty: false
    volumes:
      - wallet:/usr/key
      - log:/aethir-node/log
    networks:
      - checkernet

  cli:
    build: .
    platform: linux/amd64
    command: ./AethirCheckerCLI
    attach: false
    tty: true
    stdin_open: true
    volumes:
      - wallet:/usr/key
    network_mode: "service:checker"
    depends_on:
      - checker

  prometheus:
    profiles:
      - with-prometheus
    image: prom/prometheus
    platform: linux
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    networks:
      - checkernet
      - prometheusnet
    ports:
      - 39090:9090

  prometheus-node-exporter:
    profiles:
      - with-prometheus
    image: prom/node-exporter
    restart: unless-stopped
    network_mode: "service:checker"
    pid: host
    command:
      - '--path.rootfs=/'

  telegraf:
    profiles:
      - with-prometheus
    image: telegraf:alpine
    restart: unless-stopped
    platform: linux
    pid: "service:checker"
    network_mode: "service:checker"
    volumes:
      - log:/aethir-node-log
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

  grafana:
    profiles:
      - with-grafana
    image: grafana/grafana
    restart: unless-stopped
    networks:
      - prometheusnet
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-dashboard.json:/dashboards/checkernode.json
      - ./grafana-dashboard-provider.yml:/etc/grafana/provisioning/dashboards/checkernode.yml
      - ./grafana-prometheus-datasource.yml:/etc/grafana/provisioning/datasources/prometheus.yml


volumes:
  wallet:
  log:
  prometheus:
  grafana-storage:

networks:
  checkernet:
    driver_opts:
      com.docker.network.bridge.name: br-checker
  prometheusnet:
